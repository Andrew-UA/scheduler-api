swagger: "2.0"
info:
  description: "Schedule events API"
  version: "1.0"
  title: "Schedule events"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8000"
basePath: "/"
tags:
  - name: Auth
    description: Authorization
  - name: Schedule events
    description: "Manage your schedules"
  - name: Users
    description: "Operations about user"
  - name: Metric
    description: "Get information about request"
schemes:
  - "http"
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Loggin user into th system
      operationId: Login
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        200:
          description: Success
          schema:
            type: string
        400:
          description: Invalid data
  /schedule-events:
    post:
      tags:
        - Schedule events
      summary: "Add new schedule event"
      description: ""
      operationId: "addScheduleEvent"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: Schedule event object
          required: true
          schema:
            $ref: '#/definitions/ScheduleEvent'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ScheduleEvent'
        400:
          description: Invalid data
        401:
          description: Unauthorized
    get:
      tags:
        - Schedule events
      summary: "Get all schedule events"
      description: ""
      operationId: "listScheduleEvent"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          description: Schedule event intervsl
          required: false
          type: string
          name: intreval
          enum:
            - day
            - week
            - year
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ScheduleEvents'
        400:
          description: Invalid data
        401:
          description: Unauthorized
  /schedule-events{id}:
    get:
      tags:
        - Schedule events
      summary: Show schedule event
      description: ""
      operationId: showScheduelEvent
      consumes:
        - "application/json"
      produces:
          - "application/json"
      parameters:
        - in: path
          name: id
          description: Schedule event ID
          required: true
          type: integer
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScheduleEvent"
        "404":
          description: "Schedule event not found"
    put:
      tags:
        - Schedule events
      summary: Update schedule event
      description: ""
      operationId: updateScheduelEvent
      consumes:
        - "application/json"
      produces:
          - "application/json"
      parameters:
        - in: path
          name: id
          description: Schedule event ID
          required: true
          type: integer
        - in: body
          name: body
          description: Update schedule evenet object
          required: true
          schema:
            $ref: '#/definitions/ScheduleEvent'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScheduleEvent"
        "404":
          description: "Schedule event not found"
securityDefinitions:
  ApiKayAuth:
    type: apiKey
    name: Authorization
    in: header
definitions:
  ScheduleEvent:
    type: "object"
    properties:
      id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
      name:
        type: string
        description: "Name of schedule event"
      time:
        type: integer
        format: int64"
        description: "Schedule event duration in seconds"
      start_at:
        type: string
        format: date-time
  ScheduleEvents:
    properties:
      data:
        type: "array"
        items:
          $ref: '#/definitions/ScheduleEvent'
  Login:
    properties:
      login:
        type: string
      password:
        type: string
    required:
      - login
      - password

